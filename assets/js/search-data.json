{
  
    
        "post0": {
            "title": "Статья",
            "content": "References . Aviv Y, Pazgal A (2002). ‘Pricing of short life-cycle products through active learning’. Under revision for Management Science. . Bellman R (1957). ‘A Markovian Decision Process’. Journal of Mathematics and Mechanics, 6. . Carroll WJ, Grimes RC (1995). ‘Evolutionary change in product management: Experiences in the car rental industry’. Interfaces, t. 25, no. 5, pp. 84-104. . Carvalho AX, Puterman ML (2003). ‘Dynamic pricing and learning over short time horizons’. Sander School of Business, UBC, Working Paper. . Chen L, Mislove A, Wilson C (2016). ‘An empirical analysis of algorithmic pricing on amazon marketplace’. Proceedings of the 25th international conference on world wide web, International World Wide Web Conferences Steering Committee, pp. 1339-1349. . Chinthalapati VLR, Yadati N, Karumanchi R (2006). ‘Learning dynamic prices in multi-seller electronic retail markets with price-sensitive customers, stochastic demands, and inventory replenishments’. IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews), t. 36, no. 1, pp. 92-106. . Ciancimino A et al (1999). ‘A mathematical programming approach for the solution of the railway yield management problem’. Transportation Science, t. 33, no. 2, pp. 168-181. . Deksnyte I, Lydeka Z (2012). ‘Dynamic pricing and its forming factors’. International Journal of Business and Social Science, t. 3, no. 23. . Didur I (2018). ‘Dynamic pricing algorithms on Uber and Lyft’. https://datarootlabs.com/uber-lift-gett-surge-pricing-algorithms/ . Dimicco JM, Maes P, Greenwald A (2003). ‘Learning curve: A simulation-based approach to dynamic pricing’. Electronic Commerce Research, t. 3, no. 3-4, pp. 245-276. . Gupta M, Ravikumar K, Kumar M (2002). ‘Adaptive strategies for price markdown in a multi-unit descending price auction: A comparative study’. IEEE International Conference on Systems, Man and Cybernetics, t. 1, pp. 373-378. . Hayes DK, Miller AA (2011). ‘Revenue Management for the Hospitality Industry’. Hoboken, NJ: Wiley. . Hester T et al (2018). ‘Deep q-learning from demonstrations’. Thirty-Second AAAI Conference on Artificial Intelligence. . Jintian W, Lei Z (2009). ‘Application of reinforcement learning in dynamic pricing algorithms’. IEEE International Conference on Automation and Logistics, pp. 419-423. . Kephart JO, Hanson JE, Greenwald AR (2000). ‘Dynamic pricing by software agents’. Computer Networks, t. 32. no. 6, pp. 731-752. . Lane A (2019), ‘How Dynamic Pricing Is Revolutionizing Retail, The use of analytics to set prices in real time is becoming widespread’. https://channels.theinnovationenterprise.com/articles/how-dynamic-pricing-is-revolutionizing-retail . Larina E (2015). ‘Airbnb and HomeAway switch to dynamic pricing’. https://buyingbusinesstravel.com.ru/news/accomodation/3498-airbnb-i-homeaway-perekhodyat-na-dinamicheskoe-tsenoobrazovanie-/ . Lawrence RD (2003). ‘A machine-learning approach to optimal bid pricing’. Computational modeling and problem solving in the networked world, Springer, Boston, MA, pp. 97-118. . Littlewood K (1972). ‘Forecasting and control of passenger bookings’. Airline Group International Federation of Operational Research Societies Proceedings, t. 12, pp. 95-117. . Liu G, Wang H (2013). ‘An online sequential feed-forward network model for demand curve prediction’. Journal of information &amp; computational science, t. 10, no. 10, pp. 3063-3069. . Liu J et al (2018). ‘Dynamic Pricing on E-commerce Platform with Deep Reinforcement Learning’. International Conference on Learning Representations, New Orleans, Louisiana, United States. . Lu R, Hong SH, Zhang X (2018). ‘A dynamic pricing demand response algorithm for smart grid: reinforcement learning approach’. Applied Energy, t. 220, pp. 220-230. . Mnih V et al (2015). ‘Human-level control through deep reinforcement learning’. Nature, t. 518, no. 7540, p. 529. . Mullen PB et al (2006). ‘Particle swarm optimization in dynamic pricing’. IEEE International Conference on Evolutionary Computation, pp. 1232-1239. . Николенко С, Кадурин А, Архангельская Е (2018). Глубокое обучение, СПб.: Питер, 480 p. . Raju CVL, Narahari Y, Ravikumar K (2006). ‘Learning dynamic prices in electronic retail markets with customer segmentation’. Annals of Operations Research, t. 143, no. 1, pp. 59-75. . Ramezani S, Bosman PAN, La Poutré H (2011). ‘Adaptive strategies for dynamic pricing agents’, Proceedings of the 2011 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology-Volume 02. IEEE Computer Society, pp. 323-328. . Rothstein M (1971). ‘An airline overbooking model’. Transportation Science, t. 5, no. 2, pp. 180-192. . Spedicato GA, Dutang C, Petrini L (2018). ‘Machine Learning Methods to Perform Pricing Optimization. A Comparison with Standard GLMs’. Casualty actuarial society, v. 12, issue 1, pp. 69-89. . Subrahmanyan S, Shoemaker R (1996). ‘Developing optimal pricing and inventory policies for retailers who face uncertain demand’. Journal of Retailing, t. 72, no.1, pp. 7-30. . Sutton RS, Barto AG (2018). ‘Reinforcement learning: An introduction’. MIT press. . Watkins C (1989). ‘Learning from delayed rewards’. PhD Thesis, University of Cambridge, England. . Weatherford LR, Bodily SE (1992). ‘A taxonomy and research overview of perishable-asset revenue management: Yield management, overbooking, and pricing’. Operations research, t. 40, no. 5, pp. 831-844. . Xia L, Monroe KB, Cox JL (2004). ‘The price is unfair! A conceptual framework of price fairness perceptions’. Journal of marketing, t. 68, no. 4, pp. 1-15. .",
            "url": "https://maxbalashov.github.io/ml-notes/2020/05/01/%D1%81%D1%82%D0%B0%D1%82%D1%8C%D1%8F.html",
            "relUrl": "/2020/05/01/%D1%81%D1%82%D0%B0%D1%82%D1%8C%D1%8F.html",
            "date": " • May 1, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://maxbalashov.github.io/ml-notes/jupyter/2020/02/20/test+test.html",
            "relUrl": "/jupyter/2020/02/20/test+test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://maxbalashov.github.io/ml-notes/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://maxbalashov.github.io/ml-notes/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://maxbalashov.github.io/ml-notes/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}